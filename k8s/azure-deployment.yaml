apiVersion: v1
kind: ConfigMap
metadata:
  name: roster-bridge-config
data:
  DEBUG: "False"
  LOG_LEVEL: "INFO"
  USE_EXTERNAL_API_KEYS: "True"
  MAX_FILE_SIZE_MB: "100"
  UPLOAD_DIRECTORY: "/tmp/uploads"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: roster-bridge-jpp
  labels:
    app: roster-bridge-jpp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: roster-bridge-jpp
  template:
    metadata:
      labels:
        app: roster-bridge-jpp
    spec:
      containers:
      - name: roster-bridge-jpp
        image: ${ACR_LOGIN_SERVER}/roster-bridge-jpp:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: roster-bridge-secrets
              key: database-url
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: roster-bridge-secrets
              key: api-key
        envFrom:
        - configMapRef:
            name: roster-bridge-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: roster-bridge-service
spec:
  selector:
    app: roster-bridge-jpp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: LoadBalancer
